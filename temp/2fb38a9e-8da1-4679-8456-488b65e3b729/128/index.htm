<!DOCTYPE HTML><html><head>
<meta http-equiv="Content-Type" content="text/html; charset=unicode">
<title>适配器设计模式</title>
    <!--mark |wiz_custom_css| for wizeditor replace it-->


<style type="text/css" id="wiz_todo_style_id" wiz_link_version="01.00.09">.wiz-todo, .wiz-todo-img {width: 16px; height: 16px; cursor: default; padding: 0 10px 0 2px; vertical-align: -10%;-webkit-user-select: none;} .wiz-todo-label { display: inline-block; padding-top: 7px; padding-bottom: 6px; line-height: 1.5;} .wiz-todo-label-checked {  color: #666;} .wiz-todo-label-unchecked {text-decoration: initial;} .wiz-todo-completed-info {padding-left: 44px; display: inline-block; } .wiz-todo-avatar { width:20px; height: 20px; vertical-align: -20%; margin-right:10px; border-radius: 2px;} .wiz-todo-account, .wiz-todo-dt { color: #666; }</style><link type="text/css" rel="stylesheet" id="wiz_code_highlight_link" href="index_files/wiz_code_highlight_158.css"><style id="wiz_custom_css">html, body {            font-size: 15px;        }        body {            font-family: Helvetica, 'Hiragino Sans GB', '微软雅黑', 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;            line-height: 1.6;            margin: 0;            padding: 20px 15px;            padding: 1.33rem 1rem;        }        h1, h2, h3, h4, h5, h6 {            margin: 20px 0 10px;            margin: 1.33rem 0 0.667rem;            padding: 0;            font-weight: bold;        }        h1 {            font-size: 21px;            font-size: 1.4rem;        }        h2 {            font-size: 20px;            font-size: 1.33rem;        }        h3 {            font-size: 18px;            font-size: 1.2rem;        }        h4 {            font-size: 17px;            font-size: 1.13rem;        }        h5 {            font-size: 15px;            font-size: 1rem;        }        h6 {            font-size: 15px;            font-size: 1rem;            color: #777777;            margin: 1rem 0;        }        div, p, ul, ol, dl, li {            margin: 0;        }        blockquote, table, pre, code {            margin: 8px 0;        }        ul, ol {            padding-left: 32px;            padding-left: 2.13rem;        }        blockquote {            padding: 0 12px;            padding: 0 0.8rem;        }        blockquote > :first-child {            margin-top: 0;        }        blockquote > :last-child {            margin-bottom: 0;        }        img {            border: 0;            max-width: 100%;            height: auto !important;            margin: 2px 0;        }        table {            border-collapse: collapse;            border: 1px solid #bbbbbb;        }        td, th {            padding: 4px 8px;            border-collapse: collapse;            border: 1px solid #bbbbbb;			        }        @media only screen and (-webkit-max-device-width: 1024px), only screen and (-o-max-device-width: 1024px), only screen and (max-device-width: 1024px), only screen and (-webkit-min-device-pixel-ratio: 3), only screen and (-o-min-device-pixel-ratio: 3), only screen and (min-device-pixel-ratio: 3) {            html, body {                font-size: 17px;            }            body {                line-height: 1.7;                padding: 0.75rem 0.9375rem;                color: #353c47;            }            h1 {                font-size: 2.125rem;            }            h2 {                font-size: 1.875rem;            }            h3 {                font-size: 1.625rem;            }            h4 {                font-size: 1.375rem;            }            h5 {                font-size: 1.125rem;            }            h6 {                color: inherit;            }            ul, ol {                padding-left: 2.5rem;            }            blockquote {                padding: 0 0.9375rem;            }        }</style><style id="wiz_tmp_editor_style" wiz_style= "unsave">html, body {    font-size: 15px;}body {    font-family: Helvetica, 'Hiragino Sans GB', 微软雅黑, 'Microsoft YaHei UI', SimSun, SimHei, arial, sans-serif;    line-height: 1.6;    color: ;    background-color: ;    margin: 0;    padding: 20px 15px;    padding: 1.33rem 1rem;}img{    max-width: 100%;}</style><script type="text/javascript" src="file:///D:\WizNote\WizTools\htmleditor\utils.js" wiz_style="unsave" charset="utf-8"></script><script type="text/javascript" src="file:///D:\WizNote\WizTools\htmleditor\localize.js" wiz_style="unsave" charset="utf-8"></script><script type="text/javascript" src="file:///D:\WizNote\WizTools\htmleditor\core\wizEditorForPc.js" wiz_style="unsave" charset="utf-8"></script><script type="text/javascript" src="file:///D:\WizNote\WizTools\htmleditor\editorHelper.js" wiz_style="unsave" charset="utf-8"></script><script type="text/javascript" src="file:///E:\我的为知\templates\WizTemplate.js" wiz_style="unsave" charset="utf-8"></script></head>

<body  style=""><div><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="language-java"><span class="kwd">package</span><span class="pln"> feng</span><span class="pun">.</span><span class="pln">model</span><span class="pun">;</span></code></li><li class="L1"><code class="language-java"><span class="com">/*有时候我们想实现一个接口，但是又不想重写他所有的方法，</span></code></li><li class="L2"><code class="language-java"><span class="com">先有一个适配器类（抽象类） 实现所有的那个接口</span></code></li><li class="L3"><code class="language-java"><span class="com">的方法，再让你的类 继承这个适配器类*/</span></code></li><li class="L4"><code class="language-java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="pun">适配器设计模式</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-java"></code></li><li class="L6"><code class="language-java"><span class="pun">}</span></code></li><li class="L7"><code class="language-java"><span class="kwd">class</span><span class="pln"> </span><span class="typ">StudentA</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">TrainAdapter</span><span class="pun">{</span><span class="com">//继承适配器类</span></code></li><li class="L8"><code class="language-java"><span class="pln">	</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">XiangQi</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code class="language-java"><span class="pln">		</span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"我会弹钢琴"</span><span class="pun">);</span><span class="com">//重写需要重写的方法</span></code></li><li class="L0"><code class="language-java"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L1"><code class="language-java"><span class="pun">}</span></code></li><li class="L2"><code class="language-java"></code></li><li class="L3"><code class="language-java"></code></li><li class="L4"><code class="language-java"></code></li><li class="L5"><code class="language-java"><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Train</span><span class="pun">{</span></code></li><li class="L6"><code class="language-java"><span class="pln">	</span><span class="kwd">void</span><span class="pln"> </span><span class="typ">PingPang</span><span class="pun">();</span></code></li><li class="L7"><code class="language-java"><span class="pln">	</span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Wushu</span><span class="pun">();</span></code></li><li class="L8"><code class="language-java"><span class="pln">	</span><span class="kwd">void</span><span class="pln"> </span><span class="typ">TanQin</span><span class="pun">();</span></code></li><li class="L9"><code class="language-java"><span class="pln">	</span><span class="kwd">void</span><span class="pln"> </span><span class="typ">XiangQi</span><span class="pun">();</span></code></li><li class="L0"><code class="language-java"><span class="pun">}</span></code></li><li class="L1"><code class="language-java"></code></li><li class="L2"><code class="language-java"><span class="kwd">abstract</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TrainAdapter</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Train</span><span class="pun">{</span><span class="com">//定义一个抽象的适配器类实现接口</span></code></li><li class="L3"><code class="language-java"></code></li><li class="L4"><code class="language-java"><span class="pln">	</span><span class="lit">@Override</span></code></li><li class="L5"><code class="language-java"><span class="pln">	</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">PingPang</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code class="language-java"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L7"><code class="language-java"></code></li><li class="L8"><code class="language-java"><span class="pln">	</span><span class="lit">@Override</span></code></li><li class="L9"><code class="language-java"><span class="pln">	</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">Wushu</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-java"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L1"><code class="language-java"></code></li><li class="L2"><code class="language-java"><span class="pln">	</span><span class="lit">@Override</span></code></li><li class="L3"><code class="language-java"><span class="pln">	</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">TanQin</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code class="language-java"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L5"><code class="language-java"></code></li><li class="L6"><code class="language-java"><span class="pln">	</span><span class="lit">@Override</span></code></li><li class="L7"><code class="language-java"><span class="pln">	</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="typ">XiangQi</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code class="language-java"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L9"><code class="language-java"><span class="pln">	</span></code></li><li class="L0"><code class="language-java"><span class="pun">}</span></code></li></ol></pre></div><div><br></div></body></html>