Scannner
  String  nextLine()
  int  nextInt()
  boolean  hasNextInt()//判断接收的值是不是int的类型
             一个小问题：先接收int类型的再用nextLine()接收的时候 会接收不到字符串
		1）再创建一个Scanner对象
		2）用nextLine()来接收数字类型的字符串 然后转成int类型Integer.parseInt(String str)
String类   
	
String构造方法:
	String(byte[] bys)//解码对应的字符集,将byte[]中的元素按照ascII码表转化成字符组成字符串
	String(char[] chs)// 将char[]中的字符组成字符串
	String()  //空参构造String s=new String();String s1="";则s==s1
	
	System.out.println(s); 相当于s.toString();//String中复写了Object类中的toString方法
	
int length();这是一个方法获取字符串中字符个数
char charAt(int Index);获取对应位置的字符  StringIndexOutOfException

int indexof(int ch); 获取指定字符出现的位置     没找到返回-1
int indexof(String st); 获取指定连续字符串出现的位置     没找到返回-1
int indexof(String st,int fromIndex); 获取指定连续字符串在fromIndex之后(含)出现的位置     没找到返回-1

lastIndexOf与indexOf用法类似

String substring(int start,int end);左闭右开
String substring(int start);截取到一个新的字符串,默认到结尾

判断方法
boolean equals(Object obj)    如果是字符串常量与变量进行比较,通常将常量放在前面调用equals,以防空指针异常
boolean equalsIgnoreCase(String str)  不区分大小写
boolean contains(String str)         包含关系
boolean startsWith(String str)      
boolean endsWith(String str)
boolean isEmpty()

字符串常量  空串  是String 类中的一个对象
null   是空常量, 不能调用任何方法,否则会出现空指针异常

byte[] getBytes()    将字符串转成字节数组
char[] toCharArray()   转成字符数组
static String valueOf(char[] cha)    
static String valueOf(int i) 任意类型转String
static String valueOf(Object obj)//调用Objcet 的toString方法

String toLowerCase()     转小写
String toUpperCase()    转大写
String concat(String str)   连接字符串

String replace(char a,char b)//用b替换a
String replace(String a,String b)//用b替换a
String trim()   //去除两端空格

int compareTo(String str);//按照Unicode码表值比较(从第一个数相减,如果相等,第二位相减,如果前面都相等,位数不同则位数相减)
int compareToIgnoreCase(String str);//不区分大小写


